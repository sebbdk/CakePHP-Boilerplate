<?xml version="1.0" encoding="UTF-8"?>

<project name="app" default="build-plugin">
 <!-- Cache reference to our current folder -->
 <dirname property="included.basedir" file="${ant.file.included}"/>

 <!-- Local Configuration -->
 <property name="project.name" value="Translations"/>

 <!-- Change unit test category tests to Translations plugin -->
 <property name="phpunit.category" value="Translations"/>

 <!-- Change unit test file -->
 <property name="phpunit.file" value="AllTranslations"/>

 <!--Include global ant build file -->
 <import file="/etc/jenkins/nodes.xml"/>

 <target name="move-plugin">
  <!-- Make a folder for the plugin -->
  <mkdir dir="${basedir}/build/plugin"/>

  <!-- Copy all code from build into build/plugin -->
  <move todir="build/plugin">
   <fileset dir="${basedir}">
    <include name="**"/>
    <exclude name="build.xml"/>
    <exclude name="build/"/>
    <exclude name="app/"/>
    <exclude name="cache.properties"/>
   </fileset>
  </move>
 </target>

 <!-- Checkout cakephp on master branch, it it doesn't exist -->
 <target name="checkout-cakephp">
  <!-- First clone CakePHP into build/cakephp -->
  <exec executable="git">
   <arg value="clone"/>
   <arg value="-b"/>
   <arg value="2.3"/>
   <arg value="git://github.com/cakephp/cakephp.git"/>
   <arg value="${basedir}/build/cakephp/"/>
  </exec>

  <!-- Then add Common submodule -->
  <exec executable="git" dir="${basedir}/build/cakephp">
   <arg value="submodule"/>
   <arg value="add"/>
   <arg value="git@github.com:nodesagency/Translations.git"/>
   <arg value="app/Plugin/Translations"/>
  </exec>

  <exec executable="git" dir="${basedir}/build/cakephp">
   <arg value="submodule"/>
   <arg value="add"/>
   <arg value="git@github.com:nodesagency/Platform-Shared-Plugin.git"/>
   <arg value="app/Plugin/Shared"/>
  </exec>

  <exec executable="git" dir="${basedir}/build/cakephp">
   <arg value="submodule"/>
   <arg value="add"/>
   <arg value="git@github.com:nodesagency/Platform-Common-Plugin.git"/>
   <arg value="app/Plugin/Common"/>
  </exec>

 </target>

 <!-- main task in ant file -->
 <target name="build-plugin" depends="checkout-cakephp,move-plugin">
  <!-- Symlink app folder -->
  <symlink overwrite="true" link="${basedir}/app" resource="${basedir}/build/cakephp/app"/>

  <!-- Symlink plugin -->
  <symlink overwrite="true" link="${basedir}/app/Plugin/Translations" resource="${basedir}/build/plugin"/>

  <!-- Write a bootstrap.php file with our plugins loaded -->
  <echo file="${basedir}/app/Config/bootstrap.php">&lt;?php
Cache::config('default', array('engine' => 'File'));
CakePlugin::load('Common', array('bootstrap' => true));
CakePlugin::load('Shared', array('bootstrap' => true));
CakePlugin::load('Translations', array('bootstrap' => true));
</echo>

<!-- Rewrite cake.php so that it loads the translations override file -->
  <echo file="${basedir}/app/Console/cake.php">&lt;?php
include_once dirname(__DIR__) . '/Plugin/Translations/Config/override_i18n.php';

$ds = DIRECTORY_SEPARATOR;
$dispatcher = 'Cake' . $ds . 'Console' . $ds . 'ShellDispatcher.php';

if (function_exists('ini_set')) {
    $root = dirname(dirname(dirname(__FILE__)));
    ini_set('include_path', $root . $ds . 'lib' . PATH_SEPARATOR . ini_get('include_path'));
}

if (!include ($dispatcher)) {
    trigger_error('Could not locate CakePHP core files.', E_USER_ERROR);
}
unset($paths, $path, $dispatcher, $root, $ds);

return ShellDispatcher::run($argv);
</echo>

  <!-- Call the normal build system -->
  <antcall target="build-parallel"/>

  <!-- Delete symlink -->
  <symlink action="delete" link="${basedir}/app"/>

  <!-- Remove all the temp stuff -->
  <move todir="/dev/null">
   <fileset dir="${basedir}">
    <exclude name="build/"/>
    <exclude name="build.xml"/>
    <exclude name="cache.properties"/>
   </fileset>
  </move>

  <!-- move code back -->
  <move todir="${basedir}">
   <fileset dir="${basedir}/build/plugin">
    <include name="**"/>
   </fileset>
  </move>
 </target>
</project>
